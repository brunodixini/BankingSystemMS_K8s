* 
* ==> Audit <==
* |---------|------------------|----------|----------|---------|-------------------------------|-------------------------------|
| Command |       Args       | Profile  |   User   | Version |          Start Time           |           End Time            |
|---------|------------------|----------|----------|---------|-------------------------------|-------------------------------|
| delete  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 21:47:22 -03 | Wed, 02 Feb 2022 21:47:40 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 21:51:39 -03 | Wed, 02 Feb 2022 21:51:52 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 21:52:09 -03 | Wed, 02 Feb 2022 21:53:49 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 21:53:59 -03 | Wed, 02 Feb 2022 21:54:32 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 21:59:03 -03 | Wed, 02 Feb 2022 22:00:21 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:00:41 -03 | Wed, 02 Feb 2022 22:02:06 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:02:30 -03 | Wed, 02 Feb 2022 22:04:53 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:05:46 -03 | Wed, 02 Feb 2022 22:12:11 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:15:00 -03 | Wed, 02 Feb 2022 22:15:18 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:16:03 -03 | Wed, 02 Feb 2022 22:17:42 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:19:11 -03 | Wed, 02 Feb 2022 22:19:45 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:23:31 -03 | Wed, 02 Feb 2022 22:24:01 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 22:26:41 -03 | Wed, 02 Feb 2022 22:53:54 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 23:21:17 -03 | Wed, 02 Feb 2022 23:21:35 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 23:21:56 -03 | Wed, 02 Feb 2022 23:23:38 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 23:24:20 -03 | Wed, 02 Feb 2022 23:25:12 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 23:56:57 -03 | Wed, 02 Feb 2022 23:57:13 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Wed, 02 Feb 2022 23:57:33 -03 | Wed, 02 Feb 2022 23:59:13 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:00:00 -03 | Thu, 03 Feb 2022 00:00:52 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:09:01 -03 | Thu, 03 Feb 2022 00:21:25 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:21:29 -03 | Thu, 03 Feb 2022 00:21:46 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:23:59 -03 | Thu, 03 Feb 2022 00:25:41 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:26:11 -03 | Thu, 03 Feb 2022 00:27:00 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:28:22 -03 | Thu, 03 Feb 2022 00:29:05 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:29:30 -03 | Thu, 03 Feb 2022 00:30:17 -03 |
| tunnel  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:30:32 -03 | Thu, 03 Feb 2022 00:32:23 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:32:26 -03 | Thu, 03 Feb 2022 00:32:42 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:32:47 -03 | Thu, 03 Feb 2022 00:34:28 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 00:34:39 -03 | Thu, 03 Feb 2022 00:35:35 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 17:54:32 -03 | Thu, 03 Feb 2022 17:54:38 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 17:55:01 -03 | Thu, 03 Feb 2022 17:56:44 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 17:56:54 -03 | Thu, 03 Feb 2022 17:58:21 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:21:49 -03 | Thu, 03 Feb 2022 18:22:07 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:39:09 -03 | Thu, 03 Feb 2022 18:39:10 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:39:20 -03 | Thu, 03 Feb 2022 18:41:10 -03 |
| addons  | minikube ingress | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:41:33 -03 | Thu, 03 Feb 2022 18:41:33 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:41:42 -03 | Thu, 03 Feb 2022 18:42:35 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:48:16 -03 | Thu, 03 Feb 2022 18:48:23 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:49:12 -03 | Thu, 03 Feb 2022 18:50:44 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:51:11 -03 | Thu, 03 Feb 2022 18:51:40 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 18:52:07 -03 | Thu, 03 Feb 2022 18:52:08 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:16:04 -03 | Thu, 03 Feb 2022 22:16:22 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:17:18 -03 | Thu, 03 Feb 2022 22:18:58 -03 |
| addons  | enbale ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:22:30 -03 | Thu, 03 Feb 2022 22:22:30 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:22:57 -03 | Thu, 03 Feb 2022 22:23:59 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:29:12 -03 | Thu, 03 Feb 2022 22:29:27 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:29:35 -03 | Thu, 03 Feb 2022 22:31:12 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 22:32:14 -03 | Thu, 03 Feb 2022 22:32:38 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 23:42:20 -03 | Thu, 03 Feb 2022 23:42:40 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 23:42:47 -03 | Thu, 03 Feb 2022 23:44:24 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Thu, 03 Feb 2022 23:59:06 -03 | Thu, 03 Feb 2022 23:59:44 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:33:27 -03 | Fri, 04 Feb 2022 00:33:42 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:33:56 -03 | Fri, 04 Feb 2022 00:35:30 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:35:38 -03 | Fri, 04 Feb 2022 00:37:16 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:54:39 -03 | Fri, 04 Feb 2022 00:54:41 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:55:26 -03 | Fri, 04 Feb 2022 00:56:46 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 00:56:53 -03 | Fri, 04 Feb 2022 00:56:55 -03 |
| delete  |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 01:00:05 -03 | Fri, 04 Feb 2022 01:00:21 -03 |
| start   |                  | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 01:01:00 -03 | Fri, 04 Feb 2022 01:02:31 -03 |
| addons  | enable ingress   | minikube | bi009260 | v1.24.0 | Fri, 04 Feb 2022 01:02:52 -03 | Fri, 04 Feb 2022 01:03:25 -03 |
|---------|------------------|----------|----------|---------|-------------------------------|-------------------------------|

* 
* ==> Last Start <==
* Log file created at: 2022/02/04 01:01:00
Running on machine: bhz-a-005944
Binary: Built with gc go1.17.2 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0204 01:01:00.036198   15671 out.go:297] Setting OutFile to fd 1 ...
I0204 01:01:00.036770   15671 out.go:349] isatty.IsTerminal(1) = true
I0204 01:01:00.036772   15671 out.go:310] Setting ErrFile to fd 2...
I0204 01:01:00.036774   15671 out.go:349] isatty.IsTerminal(2) = true
I0204 01:01:00.037240   15671 root.go:313] Updating PATH: /Users/bi009260/.minikube/bin
I0204 01:01:00.038166   15671 out.go:304] Setting JSON to false
I0204 01:01:00.079544   15671 start.go:112] hostinfo: {"hostname":"bhz-a-005944","uptime":23108,"bootTime":1643924152,"procs":264,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"11.5.2","kernelVersion":"20.6.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"c254991a-e36e-5b6f-b1fc-9b4aa8c11091"}
W0204 01:01:00.079651   15671 start.go:120] gopshost.Virtualization returned error: not implemented yet
I0204 01:01:00.098473   15671 out.go:176] 😄  minikube v1.24.0 on Darwin 11.5.2 (arm64)
I0204 01:01:00.098866   15671 notify.go:174] Checking for updates...
W0204 01:01:00.098977   15671 preload.go:294] Failed to list preload files: open /Users/bi009260/.minikube/cache/preloaded-tarball: no such file or directory
I0204 01:01:00.099800   15671 driver.go:343] Setting default libvirt URI to qemu:///system
I0204 01:01:00.099836   15671 global.go:111] Querying for installed drivers using PATH=/Users/bi009260/.minikube/bin:/opt/homebrew/opt/node@14/bin:/opt/homebrew/opt/node@14/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Postgres.app/Contents/Versions/latest/bin:/Library/Frameworks/Python.framework/Versions/3.8/bin:/usr/local/opt/openssl/bin:/sbi:/Users/bi009260/dev/apache-maven-3.8.1/bin
I0204 01:01:00.099918   15671 global.go:119] podman default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/}
I0204 01:01:00.099934   15671 global.go:119] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc:}
I0204 01:01:00.100013   15671 global.go:119] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/}
I0204 01:01:00.100056   15671 global.go:119] vmware default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "docker-machine-driver-vmware": executable file not found in $PATH Reason: Fix:Install docker-machine-driver-vmware Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/}
I0204 01:01:00.100064   15671 global.go:119] vmwarefusion default: false priority: 1, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:the 'vmwarefusion' driver is no longer available Reason: Fix:Switch to the newer 'vmware' driver by using '--driver=vmware'. This may require first deleting your existing cluster Doc:https://minikube.sigs.k8s.io/docs/drivers/vmware/}
I0204 01:01:00.337446   15671 docker.go:132] docker version: linux-20.10.6
I0204 01:01:00.338152   15671 cli_runner.go:115] Run: docker system info --format "{{json .}}"
I0204 01:01:01.325426   15671 info.go:263] docker info: {ID:4Z4T:SBST:MS7A:RCWV:5SBH:XTJZ:RRDX:ATSR:HYAK:PZ2W:4ZBK:N2X7 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:5 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:true NFd:43 OomKillDisable:true NGoroutines:48 SystemTime:2022-02-04 04:01:00.447423837 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.10.25-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:6228123648 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy: Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05f951a3781f4f2c1911b05e61c160e9c30eaa8e Expected:05f951a3781f4f2c1911b05e61c160e9c30eaa8e} RuncCommit:{ID:12644e614e25b05da6fd08a38ffa0cfe1903fdec Expected:12644e614e25b05da6fd08a38ffa0cfe1903fdec} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Experimental:true Name:app Path:/usr/local/lib/docker/cli-plugins/docker-app SchemaVersion:0.1.0 ShortDescription:Docker App Vendor:Docker Inc. Version:v0.9.1-beta3] map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Build with BuildKit Vendor:Docker Inc. Version:v0.5.1-docker] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:2.0.0-beta.1] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.8.0]] Warnings:<nil>}}
I0204 01:01:01.325483   15671 global.go:119] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc:}
I0204 01:01:01.352413   15671 global.go:119] hyperkit default: true priority: 8, state: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:the installed hyperkit version (0.20180403) is older than the minimum recommended version (0.20190201) Reason: Fix:Run 'brew upgrade hyperkit' Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/hyperkit/}
I0204 01:01:01.352528   15671 global.go:119] parallels default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "prlctl": executable file not found in $PATH Reason: Fix:Install Parallels Desktop for Mac Doc:https://minikube.sigs.k8s.io/docs/drivers/parallels/}
I0204 01:01:01.352542   15671 driver.go:278] not recommending "ssh" due to default: false
I0204 01:01:01.352566   15671 driver.go:313] Picked: docker
I0204 01:01:01.352574   15671 driver.go:314] Alternatives: [hyperkit ssh]
I0204 01:01:01.352576   15671 driver.go:315] Rejects: [virtualbox vmware vmwarefusion podman parallels]
I0204 01:01:01.390262   15671 out.go:176] ✨  Automatically selected the docker driver. Other choices: hyperkit, ssh
I0204 01:01:01.390585   15671 start.go:280] selected driver: docker
I0204 01:01:01.390591   15671 start.go:762] validating driver "docker" against <nil>
I0204 01:01:01.390603   15671 start.go:773] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc:}
I0204 01:01:01.390999   15671 cli_runner.go:115] Run: docker system info --format "{{json .}}"
I0204 01:01:01.630527   15671 info.go:263] docker info: {ID:4Z4T:SBST:MS7A:RCWV:5SBH:XTJZ:RRDX:ATSR:HYAK:PZ2W:4ZBK:N2X7 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:5 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:true NFd:43 OomKillDisable:true NGoroutines:48 SystemTime:2022-02-04 04:01:01.509593004 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.10.25-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:6228123648 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy: Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:05f951a3781f4f2c1911b05e61c160e9c30eaa8e Expected:05f951a3781f4f2c1911b05e61c160e9c30eaa8e} RuncCommit:{ID:12644e614e25b05da6fd08a38ffa0cfe1903fdec Expected:12644e614e25b05da6fd08a38ffa0cfe1903fdec} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Experimental:true Name:app Path:/usr/local/lib/docker/cli-plugins/docker-app SchemaVersion:0.1.0 ShortDescription:Docker App Vendor:Docker Inc. Version:v0.9.1-beta3] map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Build with BuildKit Vendor:Docker Inc. Version:v0.5.1-docker] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:2.0.0-beta.1] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.8.0]] Warnings:<nil>}}
I0204 01:01:01.630614   15671 start_flags.go:268] no existing cluster config was found, will generate one from the flags 
W0204 01:01:01.630968   15671 info.go:50] Unable to get CPU info: no such file or directory
W0204 01:01:01.631035   15671 start.go:925] could not get system cpu info while verifying memory limits, which might be okay: no such file or directory
W0204 01:01:01.631044   15671 info.go:50] Unable to get CPU info: no such file or directory
W0204 01:01:01.631049   15671 start.go:925] could not get system cpu info while verifying memory limits, which might be okay: no such file or directory
I0204 01:01:01.631063   15671 start_flags.go:349] Using suggested 2200MB memory alloc based on sys=8192MB, container=5939MB
I0204 01:01:01.631118   15671 start_flags.go:736] Wait components to verify : map[apiserver:true system_pods:true]
I0204 01:01:01.631540   15671 cni.go:93] Creating CNI manager for ""
I0204 01:01:01.631543   15671 cni.go:167] CNI unnecessary in this configuration, recommending no CNI
I0204 01:01:01.631546   15671 start_flags.go:282] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.22.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host}
I0204 01:01:01.667856   15671 out.go:176] 👍  Starting control plane node minikube in cluster minikube
I0204 01:01:01.667942   15671 cache.go:118] Beginning downloading kic base image for docker with docker
I0204 01:01:01.684680   15671 out.go:176] 🚜  Pulling base image ...
I0204 01:01:01.684731   15671 preload.go:132] Checking if preload exists for k8s version v1.22.3 and runtime docker
I0204 01:01:01.685070   15671 image.go:75] Checking for gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c in local docker daemon
I0204 01:01:01.816144   15671 image.go:79] Found gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c in local docker daemon, skipping pull
I0204 01:01:01.816414   15671 cache.go:140] gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c exists in daemon, skipping load
W0204 01:01:01.842411   15671 preload.go:115] https://storage.googleapis.com/minikube-preloaded-volume-tarballs/preloaded-images-k8s-v13-v1.22.3-docker-overlay2-arm64.tar.lz4 status code: 404
I0204 01:01:01.843004   15671 profile.go:147] Saving config to /Users/bi009260/.minikube/profiles/minikube/config.json ...
I0204 01:01:01.843185   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/config.json: {Name:mk5f8fd586ff0935ca9b8b053cad02028a4dfe8f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:01:01.843210   15671 cache.go:107] acquiring lock: {Name:mkf5be670a8cd5e04a1377cbefb4b00e6ae9fad8 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843211   15671 cache.go:107] acquiring lock: {Name:mk57d884bd538e73c1ee5bb77b2c2daefe165a2b Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843215   15671 cache.go:107] acquiring lock: {Name:mkb0a8b346529b87d2d1b1e0d876509ab8870849 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843250   15671 cache.go:107] acquiring lock: {Name:mkdc4ff6a8f051af02bb098d5312db688577ec67 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843269   15671 cache.go:107] acquiring lock: {Name:mkaa109ff7de28173845ab5c67703e9bf43ce5cb Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843268   15671 cache.go:107] acquiring lock: {Name:mk4a0fea2e5fe705471086cc94b2ec0e951844dd Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843271   15671 cache.go:107] acquiring lock: {Name:mk3889239cf022863eecab99636d68940a681b04 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843267   15671 cache.go:107] acquiring lock: {Name:mkf59f026d489ec9ae3455995c5335ff836d53f3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843329   15671 cache.go:107] acquiring lock: {Name:mkf5c5c785ec19a883b787ad34a99e2103e71d74 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843335   15671 cache.go:107] acquiring lock: {Name:mk317e3767712dd01373a5f07ca5834a6346fd6c Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843550   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7 exists
I0204 01:01:01.843556   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3 exists
I0204 01:01:01.843569   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1 exists
I0204 01:01:01.843570   15671 cache.go:96] cache image "docker.io/kubernetesui/metrics-scraper:v1.0.7" -> "/Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7" took 603.917µs
I0204 01:01:01.843576   15671 cache.go:80] save to tar file docker.io/kubernetesui/metrics-scraper:v1.0.7 -> /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7 succeeded
I0204 01:01:01.843574   15671 cache.go:96] cache image "k8s.gcr.io/kube-apiserver:v1.22.3" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3" took 576.375µs
I0204 01:01:01.843584   15671 cache.go:80] save to tar file k8s.gcr.io/kube-apiserver:v1.22.3 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3 succeeded
I0204 01:01:01.843586   15671 cache.go:96] cache image "docker.io/kubernetesui/dashboard:v2.3.1" -> "/Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1" took 336.916µs
I0204 01:01:01.843591   15671 cache.go:80] save to tar file docker.io/kubernetesui/dashboard:v2.3.1 -> /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1 succeeded
I0204 01:01:01.843611   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3 exists
I0204 01:01:01.843632   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3 exists
I0204 01:01:01.843626   15671 cache.go:96] cache image "k8s.gcr.io/kube-proxy:v1.22.3" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3" took 519.042µs
I0204 01:01:01.843637   15671 cache.go:80] save to tar file k8s.gcr.io/kube-proxy:v1.22.3 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3 succeeded
I0204 01:01:01.843639   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0 exists
I0204 01:01:01.843650   15671 cache.go:96] cache image "k8s.gcr.io/kube-controller-manager:v1.22.3" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3" took 603.333µs
I0204 01:01:01.843655   15671 cache.go:80] save to tar file k8s.gcr.io/kube-controller-manager:v1.22.3 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3 succeeded
I0204 01:01:01.843655   15671 cache.go:96] cache image "k8s.gcr.io/etcd:3.5.0-0" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0" took 612.459µs
I0204 01:01:01.843659   15671 cache.go:80] save to tar file k8s.gcr.io/etcd:3.5.0-0 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0 succeeded
I0204 01:01:01.843669   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4 exists
I0204 01:01:01.843681   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3 exists
I0204 01:01:01.843691   15671 cache.go:206] Successfully downloaded all kic artifacts
I0204 01:01:01.843692   15671 cache.go:96] cache image "k8s.gcr.io/kube-scheduler:v1.22.3" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3" took 728.125µs
I0204 01:01:01.843695   15671 cache.go:80] save to tar file k8s.gcr.io/kube-scheduler:v1.22.3 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3 succeeded
I0204 01:01:01.843695   15671 cache.go:96] cache image "k8s.gcr.io/coredns/coredns:v1.8.4" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4" took 359.792µs
I0204 01:01:01.843699   15671 cache.go:80] save to tar file k8s.gcr.io/coredns/coredns:v1.8.4 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4 succeeded
I0204 01:01:01.843705   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5 exists
I0204 01:01:01.843717   15671 cache.go:115] /Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5 exists
I0204 01:01:01.843715   15671 start.go:313] acquiring machines lock for minikube: {Name:mk1d8a411fbeedd2233949c832f866c426b899a3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0204 01:01:01.843719   15671 cache.go:96] cache image "gcr.io/k8s-minikube/storage-provisioner:v5" -> "/Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5" took 638.916µs
I0204 01:01:01.843722   15671 cache.go:80] save to tar file gcr.io/k8s-minikube/storage-provisioner:v5 -> /Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5 succeeded
I0204 01:01:01.843728   15671 cache.go:96] cache image "k8s.gcr.io/pause:3.5" -> "/Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5" took 400.375µs
I0204 01:01:01.843731   15671 cache.go:80] save to tar file k8s.gcr.io/pause:3.5 -> /Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5 succeeded
I0204 01:01:01.843733   15671 cache.go:87] Successfully saved all images to host disk.
I0204 01:01:01.843862   15671 start.go:317] acquired machines lock for "minikube" in 141.834µs
I0204 01:01:01.844043   15671 start.go:89] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.22.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.22.3 ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host} &{Name: IP: Port:8443 KubernetesVersion:v1.22.3 ControlPlane:true Worker:true}
I0204 01:01:01.844089   15671 start.go:126] createHost starting for "" (driver="docker")
I0204 01:01:01.878847   15671 out.go:203] 🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
I0204 01:01:01.879047   15671 start.go:160] libmachine.API.Create for "minikube" (driver="docker")
I0204 01:01:01.879059   15671 client.go:168] LocalClient.Create starting
I0204 01:01:01.879281   15671 main.go:130] libmachine: Reading certificate data from /Users/bi009260/.minikube/certs/ca.pem
I0204 01:01:01.879661   15671 main.go:130] libmachine: Decoding PEM data...
I0204 01:01:01.879679   15671 main.go:130] libmachine: Parsing certificate...
I0204 01:01:01.879931   15671 main.go:130] libmachine: Reading certificate data from /Users/bi009260/.minikube/certs/cert.pem
I0204 01:01:01.880171   15671 main.go:130] libmachine: Decoding PEM data...
I0204 01:01:01.880179   15671 main.go:130] libmachine: Parsing certificate...
I0204 01:01:01.881170   15671 cli_runner.go:115] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0204 01:01:02.014072   15671 cli_runner.go:162] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0204 01:01:02.014169   15671 network_create.go:254] running [docker network inspect minikube] to gather additional debugging logs...
I0204 01:01:02.014184   15671 cli_runner.go:115] Run: docker network inspect minikube
W0204 01:01:02.139504   15671 cli_runner.go:162] docker network inspect minikube returned with exit code 1
I0204 01:01:02.139532   15671 network_create.go:257] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0204 01:01:02.139538   15671 network_create.go:259] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0204 01:01:02.139619   15671 cli_runner.go:115] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0204 01:01:02.265652   15671 network.go:288] reserving subnet 192.168.49.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[] amended:true}} dirty:map[192.168.49.0:0x140005be150] misses:0}
I0204 01:01:02.265679   15671 network.go:235] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0204 01:01:02.265688   15671 network_create.go:106] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0204 01:01:02.265754   15671 cli_runner.go:115] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true minikube
I0204 01:01:06.954393   15671 cli_runner.go:168] Completed: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true minikube: (4.688587792s)
I0204 01:01:06.955254   15671 network_create.go:90] docker network minikube 192.168.49.0/24 created
I0204 01:01:06.955303   15671 kic.go:106] calculated static IP "192.168.49.2" for the "minikube" container
I0204 01:01:06.955501   15671 cli_runner.go:115] Run: docker ps -a --format {{.Names}}
I0204 01:01:07.080854   15671 cli_runner.go:115] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0204 01:01:07.192904   15671 oci.go:102] Successfully created a docker volume minikube
I0204 01:01:07.192994   15671 cli_runner.go:115] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c -d /var/lib
I0204 01:01:07.866204   15671 oci.go:106] Successfully prepared a docker volume minikube
I0204 01:01:07.866311   15671 preload.go:132] Checking if preload exists for k8s version v1.22.3 and runtime docker
I0204 01:01:07.866399   15671 cli_runner.go:115] Run: docker info --format "'{{json .SecurityOptions}}'"
I0204 01:01:08.088206   15671 cli_runner.go:115] Run: docker run -d -t --privileged --device /dev/fuse --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb --memory-swap=2200mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c
I0204 01:01:17.275007   15671 cli_runner.go:168] Completed: docker run -d -t --privileged --device /dev/fuse --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb --memory-swap=2200mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c: (9.186710417s)
I0204 01:01:17.275179   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Running}}
I0204 01:01:17.403389   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:01:17.516442   15671 cli_runner.go:115] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0204 01:01:17.678518   15671 oci.go:281] the created container "minikube" has a running status.
I0204 01:01:17.678586   15671 kic.go:210] Creating ssh key for kic: /Users/bi009260/.minikube/machines/minikube/id_rsa...
I0204 01:01:17.711945   15671 kic_runner.go:187] docker (temp): /Users/bi009260/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0204 01:01:17.919921   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:01:18.080872   15671 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0204 01:01:18.080882   15671 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0204 01:01:18.256521   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:01:18.388817   15671 machine.go:88] provisioning docker machine ...
I0204 01:01:18.388850   15671 ubuntu.go:169] provisioning hostname "minikube"
I0204 01:01:18.389160   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:18.506325   15671 main.go:130] libmachine: Using SSH client type: native
I0204 01:01:18.506661   15671 main.go:130] libmachine: &{{{<nil> 0 [] [] []} docker [0x10125f050] 0x101261e70 <nil>  [] 0s} 127.0.0.1 58504 <nil> <nil>}
I0204 01:01:18.506671   15671 main.go:130] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0204 01:01:18.509408   15671 main.go:130] libmachine: Error dialing TCP: ssh: handshake failed: EOF
I0204 01:01:21.647004   15671 main.go:130] libmachine: SSH cmd err, output: <nil>: minikube

I0204 01:01:21.647483   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:21.770927   15671 main.go:130] libmachine: Using SSH client type: native
I0204 01:01:21.771216   15671 main.go:130] libmachine: &{{{<nil> 0 [] [] []} docker [0x10125f050] 0x101261e70 <nil>  [] 0s} 127.0.0.1 58504 <nil> <nil>}
I0204 01:01:21.771232   15671 main.go:130] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0204 01:01:21.885835   15671 main.go:130] libmachine: SSH cmd err, output: <nil>: 
I0204 01:01:21.885847   15671 ubuntu.go:175] set auth options {CertDir:/Users/bi009260/.minikube CaCertPath:/Users/bi009260/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/bi009260/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/bi009260/.minikube/machines/server.pem ServerKeyPath:/Users/bi009260/.minikube/machines/server-key.pem ClientKeyPath:/Users/bi009260/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/bi009260/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/bi009260/.minikube}
I0204 01:01:21.885862   15671 ubuntu.go:177] setting up certificates
I0204 01:01:21.885865   15671 provision.go:83] configureAuth start
I0204 01:01:21.885949   15671 cli_runner.go:115] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0204 01:01:21.998615   15671 provision.go:138] copyHostCerts
I0204 01:01:21.998862   15671 exec_runner.go:144] found /Users/bi009260/.minikube/ca.pem, removing ...
I0204 01:01:21.998866   15671 exec_runner.go:207] rm: /Users/bi009260/.minikube/ca.pem
I0204 01:01:21.999518   15671 exec_runner.go:151] cp: /Users/bi009260/.minikube/certs/ca.pem --> /Users/bi009260/.minikube/ca.pem (1082 bytes)
I0204 01:01:21.999974   15671 exec_runner.go:144] found /Users/bi009260/.minikube/cert.pem, removing ...
I0204 01:01:21.999976   15671 exec_runner.go:207] rm: /Users/bi009260/.minikube/cert.pem
I0204 01:01:22.000457   15671 exec_runner.go:151] cp: /Users/bi009260/.minikube/certs/cert.pem --> /Users/bi009260/.minikube/cert.pem (1127 bytes)
I0204 01:01:22.000999   15671 exec_runner.go:144] found /Users/bi009260/.minikube/key.pem, removing ...
I0204 01:01:22.001002   15671 exec_runner.go:207] rm: /Users/bi009260/.minikube/key.pem
I0204 01:01:22.001630   15671 exec_runner.go:151] cp: /Users/bi009260/.minikube/certs/key.pem --> /Users/bi009260/.minikube/key.pem (1679 bytes)
I0204 01:01:22.001831   15671 provision.go:112] generating server cert: /Users/bi009260/.minikube/machines/server.pem ca-key=/Users/bi009260/.minikube/certs/ca.pem private-key=/Users/bi009260/.minikube/certs/ca-key.pem org=bi009260.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0204 01:01:22.069069   15671 provision.go:172] copyRemoteCerts
I0204 01:01:22.069513   15671 ssh_runner.go:152] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0204 01:01:22.069565   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:22.181952   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:22.262445   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0204 01:01:22.276892   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/machines/server.pem --> /etc/docker/server.pem (1208 bytes)
I0204 01:01:22.290302   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0204 01:01:22.304765   15671 provision.go:86] duration metric: configureAuth took 418.47725ms
I0204 01:01:22.304774   15671 ubuntu.go:193] setting minikube options for container-runtime
I0204 01:01:22.305395   15671 config.go:176] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.22.3
I0204 01:01:22.305468   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:22.419206   15671 main.go:130] libmachine: Using SSH client type: native
I0204 01:01:22.419493   15671 main.go:130] libmachine: &{{{<nil> 0 [] [] []} docker [0x10125f050] 0x101261e70 <nil>  [] 0s} 127.0.0.1 58504 <nil> <nil>}
I0204 01:01:22.419498   15671 main.go:130] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0204 01:01:22.533750   15671 main.go:130] libmachine: SSH cmd err, output: <nil>: overlay

I0204 01:01:22.533757   15671 ubuntu.go:71] root file system type: overlay
I0204 01:01:22.533876   15671 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0204 01:01:22.533976   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:22.644703   15671 main.go:130] libmachine: Using SSH client type: native
I0204 01:01:22.645047   15671 main.go:130] libmachine: &{{{<nil> 0 [] [] []} docker [0x10125f050] 0x101261e70 <nil>  [] 0s} 127.0.0.1 58504 <nil> <nil>}
I0204 01:01:22.645095   15671 main.go:130] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0204 01:01:22.761698   15671 main.go:130] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0204 01:01:22.761802   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:22.874233   15671 main.go:130] libmachine: Using SSH client type: native
I0204 01:01:22.874504   15671 main.go:130] libmachine: &{{{<nil> 0 [] [] []} docker [0x10125f050] 0x101261e70 <nil>  [] 0s} 127.0.0.1 58504 <nil> <nil>}
I0204 01:01:22.874513   15671 main.go:130] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0204 01:01:43.821338   15671 main.go:130] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2021-07-30 19:53:13.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2022-02-04 04:01:22.759235000 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
+BindsTo=containerd.service
 After=network-online.target firewalld.service containerd.service
 Wants=network-online.target
-Requires=docker.socket containerd.service
+Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutSec=0
-RestartSec=2
-Restart=always
-
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
+Restart=on-failure
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0204 01:01:43.821365   15671 machine.go:91] provisioned docker machine in 25.432537292s
I0204 01:01:43.821376   15671 client.go:171] LocalClient.Create took 41.942323833s
I0204 01:01:43.821409   15671 start.go:168] duration metric: libmachine.API.Create for "minikube" took 41.942367125s
I0204 01:01:43.821416   15671 start.go:267] post-start starting for "minikube" (driver="docker")
I0204 01:01:43.821424   15671 start.go:277] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0204 01:01:43.821601   15671 ssh_runner.go:152] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0204 01:01:43.821712   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:43.942019   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:44.022789   15671 ssh_runner.go:152] Run: cat /etc/os-release
I0204 01:01:44.026859   15671 main.go:130] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0204 01:01:44.026875   15671 main.go:130] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0204 01:01:44.026883   15671 main.go:130] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0204 01:01:44.026886   15671 info.go:137] Remote host: Ubuntu 20.04.2 LTS
I0204 01:01:44.027695   15671 filesync.go:126] Scanning /Users/bi009260/.minikube/addons for local assets ...
I0204 01:01:44.028186   15671 filesync.go:126] Scanning /Users/bi009260/.minikube/files for local assets ...
I0204 01:01:44.028547   15671 start.go:270] post-start completed in 207.126ms
I0204 01:01:44.029779   15671 cli_runner.go:115] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0204 01:01:44.137496   15671 profile.go:147] Saving config to /Users/bi009260/.minikube/profiles/minikube/config.json ...
I0204 01:01:44.139027   15671 ssh_runner.go:152] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0204 01:01:44.139069   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:44.246054   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:44.326755   15671 start.go:129] duration metric: createHost completed in 42.482670958s
I0204 01:01:44.326766   15671 start.go:80] releasing machines lock for "minikube", held for 42.482912791s
I0204 01:01:44.326906   15671 cli_runner.go:115] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0204 01:01:44.442926   15671 ssh_runner.go:152] Run: systemctl --version
I0204 01:01:44.442976   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:44.443055   15671 ssh_runner.go:152] Run: curl -sS -m 2 https://k8s.gcr.io/
I0204 01:01:44.443107   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:44.565950   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:44.565967   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:45.815033   15671 ssh_runner.go:192] Completed: curl -sS -m 2 https://k8s.gcr.io/: (1.371953041s)
I0204 01:01:45.815083   15671 ssh_runner.go:192] Completed: systemctl --version: (1.372142292s)
I0204 01:01:45.815268   15671 ssh_runner.go:152] Run: sudo systemctl is-active --quiet service containerd
I0204 01:01:45.835358   15671 ssh_runner.go:152] Run: sudo systemctl cat docker.service
I0204 01:01:45.849206   15671 cruntime.go:255] skipping containerd shutdown because we are bound to it
I0204 01:01:45.849611   15671 ssh_runner.go:152] Run: sudo systemctl is-active --quiet service crio
I0204 01:01:45.860644   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/dockershim.sock
image-endpoint: unix:///var/run/dockershim.sock
" | sudo tee /etc/crictl.yaml"
I0204 01:01:45.872375   15671 ssh_runner.go:152] Run: sudo systemctl unmask docker.service
I0204 01:01:45.923633   15671 ssh_runner.go:152] Run: sudo systemctl enable docker.socket
I0204 01:01:45.971359   15671 ssh_runner.go:152] Run: sudo systemctl cat docker.service
I0204 01:01:45.980823   15671 ssh_runner.go:152] Run: sudo systemctl daemon-reload
I0204 01:01:46.029191   15671 ssh_runner.go:152] Run: sudo systemctl start docker
I0204 01:01:46.037874   15671 ssh_runner.go:152] Run: docker version --format {{.Server.Version}}
I0204 01:01:46.151118   15671 ssh_runner.go:152] Run: docker version --format {{.Server.Version}}
I0204 01:01:46.203067   15671 out.go:203] 🐳  Preparing Kubernetes v1.22.3 on Docker 20.10.8 ...
I0204 01:01:46.203348   15671 cli_runner.go:115] Run: docker exec -t minikube dig +short host.docker.internal
I0204 01:01:46.422430   15671 network.go:96] got host ip for mount in container by digging dns: 192.168.65.2
I0204 01:01:46.422530   15671 ssh_runner.go:152] Run: grep 192.168.65.2	host.minikube.internal$ /etc/hosts
I0204 01:01:46.427192   15671 ssh_runner.go:152] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.2	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0204 01:01:46.436674   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0204 01:01:46.559075   15671 preload.go:132] Checking if preload exists for k8s version v1.22.3 and runtime docker
I0204 01:01:46.559136   15671 ssh_runner.go:152] Run: docker images --format {{.Repository}}:{{.Tag}}
I0204 01:01:46.583502   15671 docker.go:558] Got preloaded images: 
I0204 01:01:46.583510   15671 docker.go:564] k8s.gcr.io/kube-apiserver:v1.22.3 wasn't preloaded
I0204 01:01:46.583514   15671 cache_images.go:83] LoadImages start: [k8s.gcr.io/kube-apiserver:v1.22.3 k8s.gcr.io/kube-controller-manager:v1.22.3 k8s.gcr.io/kube-scheduler:v1.22.3 k8s.gcr.io/kube-proxy:v1.22.3 k8s.gcr.io/pause:3.5 k8s.gcr.io/etcd:3.5.0-0 k8s.gcr.io/coredns/coredns:v1.8.4 gcr.io/k8s-minikube/storage-provisioner:v5 docker.io/kubernetesui/dashboard:v2.3.1 docker.io/kubernetesui/metrics-scraper:v1.0.7]
I0204 01:01:46.593222   15671 image.go:134] retrieving image: k8s.gcr.io/coredns/coredns:v1.8.4
I0204 01:01:46.593770   15671 image.go:134] retrieving image: k8s.gcr.io/kube-proxy:v1.22.3
I0204 01:01:46.594867   15671 image.go:134] retrieving image: docker.io/kubernetesui/dashboard:v2.3.1
I0204 01:01:46.595595   15671 image.go:134] retrieving image: k8s.gcr.io/kube-apiserver:v1.22.3
I0204 01:01:46.595966   15671 image.go:134] retrieving image: k8s.gcr.io/etcd:3.5.0-0
I0204 01:01:46.597410   15671 image.go:134] retrieving image: gcr.io/k8s-minikube/storage-provisioner:v5
I0204 01:01:46.597452   15671 image.go:134] retrieving image: k8s.gcr.io/pause:3.5
I0204 01:01:46.598365   15671 image.go:134] retrieving image: docker.io/kubernetesui/metrics-scraper:v1.0.7
I0204 01:01:46.598572   15671 image.go:134] retrieving image: k8s.gcr.io/kube-controller-manager:v1.22.3
I0204 01:01:46.599308   15671 image.go:134] retrieving image: k8s.gcr.io/kube-scheduler:v1.22.3
I0204 01:01:46.607996   15671 image.go:180] daemon lookup for k8s.gcr.io/kube-proxy:v1.22.3: Error response from daemon: reference does not exist
I0204 01:01:46.608182   15671 image.go:180] daemon lookup for k8s.gcr.io/coredns/coredns:v1.8.4: Error response from daemon: reference does not exist
I0204 01:01:46.608461   15671 image.go:180] daemon lookup for k8s.gcr.io/kube-apiserver:v1.22.3: Error response from daemon: reference does not exist
I0204 01:01:46.609871   15671 image.go:180] daemon lookup for docker.io/kubernetesui/dashboard:v2.3.1: Error response from daemon: reference does not exist
I0204 01:01:46.610805   15671 image.go:180] daemon lookup for k8s.gcr.io/etcd:3.5.0-0: Error response from daemon: reference does not exist
I0204 01:01:46.611329   15671 image.go:180] daemon lookup for gcr.io/k8s-minikube/storage-provisioner:v5: Error response from daemon: reference does not exist
I0204 01:01:46.612437   15671 image.go:180] daemon lookup for k8s.gcr.io/pause:3.5: Error response from daemon: reference does not exist
I0204 01:01:46.613591   15671 image.go:180] daemon lookup for docker.io/kubernetesui/metrics-scraper:v1.0.7: Error response from daemon: reference does not exist
I0204 01:01:46.614087   15671 image.go:180] daemon lookup for k8s.gcr.io/kube-controller-manager:v1.22.3: Error response from daemon: reference does not exist
I0204 01:01:46.614156   15671 image.go:180] daemon lookup for k8s.gcr.io/kube-scheduler:v1.22.3: Error response from daemon: reference does not exist
W0204 01:01:48.604338   15671 image.go:267] image docker.io/kubernetesui/dashboard:v2.3.1 arch mismatch: want arm64 got amd64. fixing
I0204 01:01:48.605483   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} docker.io/kubernetesui/dashboard:v2.3.1
W0204 01:01:48.637398   15671 image.go:267] image docker.io/kubernetesui/metrics-scraper:v1.0.7 arch mismatch: want arm64 got amd64. fixing
I0204 01:01:48.637827   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} docker.io/kubernetesui/metrics-scraper:v1.0.7
I0204 01:01:48.670922   15671 cache_images.go:111] "docker.io/kubernetesui/dashboard:v2.3.1" needs transfer: "docker.io/kubernetesui/dashboard:v2.3.1" does not exist at hash "9fe3914f585c5ba68c0cbad7c16febea5a09caec8dbc1b0e22f2b17e613ed88a" in container runtime
I0204 01:01:48.670962   15671 docker.go:239] Removing image: docker.io/kubernetesui/dashboard:v2.3.1
I0204 01:01:48.671105   15671 ssh_runner.go:152] Run: docker rmi docker.io/kubernetesui/dashboard:v2.3.1
I0204 01:01:48.687175   15671 cache_images.go:111] "docker.io/kubernetesui/metrics-scraper:v1.0.7" needs transfer: "docker.io/kubernetesui/metrics-scraper:v1.0.7" does not exist at hash "ea493a196fbd2426a92d57ad4e606d1efc11049d7e7bedf90b160d74d75308c2" in container runtime
I0204 01:01:48.687210   15671 docker.go:239] Removing image: docker.io/kubernetesui/metrics-scraper:v1.0.7
I0204 01:01:48.688042   15671 ssh_runner.go:152] Run: docker rmi docker.io/kubernetesui/metrics-scraper:v1.0.7
I0204 01:01:48.700958   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1
I0204 01:01:48.701745   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/dashboard_v2.3.1
I0204 01:01:48.714816   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7
I0204 01:01:48.714884   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/dashboard_v2.3.1: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/dashboard_v2.3.1: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/dashboard_v2.3.1': No such file or directory
I0204 01:01:48.714911   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1 --> /var/lib/minikube/images/dashboard_v2.3.1 (65396736 bytes)
I0204 01:01:48.715279   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/metrics-scraper_v1.0.7
I0204 01:01:48.719890   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/metrics-scraper_v1.0.7: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/metrics-scraper_v1.0.7: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/metrics-scraper_v1.0.7': No such file or directory
I0204 01:01:48.719932   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7 --> /var/lib/minikube/images/metrics-scraper_v1.0.7 (13969408 bytes)
I0204 01:01:49.515174   15671 docker.go:206] Loading image: /var/lib/minikube/images/metrics-scraper_v1.0.7
I0204 01:01:49.515203   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/metrics-scraper_v1.0.7 | docker load"
W0204 01:01:49.759205   15671 image.go:267] image gcr.io/k8s-minikube/storage-provisioner:v5 arch mismatch: want arm64 got amd64. fixing
I0204 01:01:49.759550   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} gcr.io/k8s-minikube/storage-provisioner:v5
I0204 01:01:49.996142   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/kube-apiserver:v1.22.3
I0204 01:01:50.312437   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/kube-proxy:v1.22.3
W0204 01:01:50.402834   15671 image.go:267] image k8s.gcr.io/coredns/coredns:v1.8.4 arch mismatch: want arm64 got amd64. fixing
I0204 01:01:50.403111   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/coredns/coredns:v1.8.4
W0204 01:01:50.419862   15671 image.go:267] image k8s.gcr.io/etcd:3.5.0-0 arch mismatch: want arm64 got amd64. fixing
I0204 01:01:50.420211   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/etcd:3.5.0-0
I0204 01:01:50.575297   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/pause:3.5
I0204 01:01:50.579044   15671 cache_images.go:111] "gcr.io/k8s-minikube/storage-provisioner:v5" needs transfer: "gcr.io/k8s-minikube/storage-provisioner:v5" does not exist at hash "66749159455b3f08c8318fe0233122f54d0f5889f9c5fdfb73c3fd9d99895b51" in container runtime
I0204 01:01:50.579072   15671 docker.go:239] Removing image: gcr.io/k8s-minikube/storage-provisioner:v5
I0204 01:01:50.579110   15671 cache_images.go:111] "k8s.gcr.io/kube-apiserver:v1.22.3" needs transfer: "k8s.gcr.io/kube-apiserver:v1.22.3" does not exist at hash "32513be2649f452b9ed3e4aeaf8b9968224077a5838bc4446afcd8ad74e51acf" in container runtime
I0204 01:01:50.579122   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/kube-controller-manager:v1.22.3
I0204 01:01:50.579128   15671 docker.go:239] Removing image: k8s.gcr.io/kube-apiserver:v1.22.3
I0204 01:01:50.579149   15671 ssh_runner.go:152] Run: docker rmi gcr.io/k8s-minikube/storage-provisioner:v5
I0204 01:01:50.579165   15671 cache_images.go:111] "k8s.gcr.io/kube-proxy:v1.22.3" needs transfer: "k8s.gcr.io/kube-proxy:v1.22.3" does not exist at hash "3a8d1d04758e2eada31b9acaeebe6e9a9dc60f5ac267183611639fc8e0e0e0aa" in container runtime
I0204 01:01:50.579181   15671 docker.go:239] Removing image: k8s.gcr.io/kube-proxy:v1.22.3
I0204 01:01:50.579197   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/kube-apiserver:v1.22.3
I0204 01:01:50.579214   15671 cache_images.go:111] "k8s.gcr.io/coredns/coredns:v1.8.4" needs transfer: "k8s.gcr.io/coredns/coredns:v1.8.4" does not exist at hash "008e44c427c6ff7a26f5a1a0ddebebfd3ea33231bd96f546e1381d1dc39d34a0" in container runtime
I0204 01:01:50.579229   15671 docker.go:239] Removing image: k8s.gcr.io/coredns/coredns:v1.8.4
I0204 01:01:50.579251   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/kube-proxy:v1.22.3
I0204 01:01:50.579286   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/coredns/coredns:v1.8.4
I0204 01:01:50.583407   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/metrics-scraper_v1.0.7 | docker load": (1.068193791s)
I0204 01:01:50.583415   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/metrics-scraper_v1.0.7 from cache
I0204 01:01:50.599199   15671 cache_images.go:111] "k8s.gcr.io/etcd:3.5.0-0" needs transfer: "k8s.gcr.io/etcd:3.5.0-0" does not exist at hash "a2ee49d2d4320959e0894768b7ca97d69e03bc360d90b591538359abf2a91609" in container runtime
I0204 01:01:50.599229   15671 docker.go:239] Removing image: k8s.gcr.io/etcd:3.5.0-0
I0204 01:01:50.599355   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/etcd:3.5.0-0
I0204 01:01:50.697522   15671 ssh_runner.go:152] Run: docker image inspect --format {{.Id}} k8s.gcr.io/kube-scheduler:v1.22.3
I0204 01:01:50.723703   15671 cache_images.go:111] "k8s.gcr.io/pause:3.5" needs transfer: "k8s.gcr.io/pause:3.5" does not exist at hash "f7ff3c40426311c68450b0a2fce030935a625cef0e606ff2e6756870f552e760" in container runtime
I0204 01:01:50.723733   15671 docker.go:239] Removing image: k8s.gcr.io/pause:3.5
I0204 01:01:50.723880   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/pause:3.5
I0204 01:01:50.807193   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4
I0204 01:01:50.807206   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3
I0204 01:01:50.807267   15671 cache_images.go:111] "k8s.gcr.io/kube-controller-manager:v1.22.3" needs transfer: "k8s.gcr.io/kube-controller-manager:v1.22.3" does not exist at hash "42e51ba6db03efeaff32c77e1fc61a1e8a596f98343ca1882a8e1700dc263efc" in container runtime
I0204 01:01:50.807279   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3
I0204 01:01:50.807291   15671 docker.go:239] Removing image: k8s.gcr.io/kube-controller-manager:v1.22.3
I0204 01:01:50.807392   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/kube-controller-manager:v1.22.3
I0204 01:01:50.807485   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5
I0204 01:01:50.807805   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-apiserver_v1.22.3
I0204 01:01:50.807806   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-proxy_v1.22.3
I0204 01:01:50.807835   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/coredns_v1.8.4
I0204 01:01:50.807847   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/storage-provisioner_v5
I0204 01:01:50.834550   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0
I0204 01:01:50.835125   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/etcd_3.5.0-0
I0204 01:01:50.872322   15671 cache_images.go:111] "k8s.gcr.io/kube-scheduler:v1.22.3" needs transfer: "k8s.gcr.io/kube-scheduler:v1.22.3" does not exist at hash "3893bb7d239347e1eec68a8f39501b676fc0a92b2c0101e415654bcd14a01eac" in container runtime
I0204 01:01:50.872362   15671 docker.go:239] Removing image: k8s.gcr.io/kube-scheduler:v1.22.3
I0204 01:01:50.872498   15671 ssh_runner.go:152] Run: docker rmi k8s.gcr.io/kube-scheduler:v1.22.3
I0204 01:01:50.889191   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5
I0204 01:01:50.889671   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/pause_3.5
I0204 01:01:51.003537   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3
I0204 01:01:51.003557   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/storage-provisioner_v5: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/storage-provisioner_v5: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/storage-provisioner_v5': No such file or directory
I0204 01:01:51.003596   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/coredns_v1.8.4: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/coredns_v1.8.4: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/coredns_v1.8.4': No such file or directory
I0204 01:01:51.003608   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5 --> /var/lib/minikube/images/storage-provisioner_v5 (8035840 bytes)
I0204 01:01:51.003623   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4 --> /var/lib/minikube/images/coredns_v1.8.4 (12264448 bytes)
I0204 01:01:51.003642   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/kube-proxy_v1.22.3: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-proxy_v1.22.3: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/kube-proxy_v1.22.3': No such file or directory
I0204 01:01:51.003667   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3 --> /var/lib/minikube/images/kube-proxy_v1.22.3 (34377728 bytes)
I0204 01:01:51.003683   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/kube-apiserver_v1.22.3: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-apiserver_v1.22.3: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/kube-apiserver_v1.22.3': No such file or directory
I0204 01:01:51.003700   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3 --> /var/lib/minikube/images/kube-apiserver_v1.22.3 (28383744 bytes)
I0204 01:01:51.003730   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/etcd_3.5.0-0: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/etcd_3.5.0-0: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/etcd_3.5.0-0': No such file or directory
I0204 01:01:51.003748   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0 --> /var/lib/minikube/images/etcd_3.5.0-0 (157800448 bytes)
I0204 01:01:51.004047   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-controller-manager_v1.22.3
W0204 01:01:51.005222   15671 ssh_runner.go:86] session error, resetting client: ssh: rejected: connect failed (open failed)
I0204 01:01:51.005268   15671 retry.go:31] will retry after 276.165072ms: ssh: rejected: connect failed (open failed)
I0204 01:01:51.030644   15671 docker.go:206] Loading image: /var/lib/minikube/images/dashboard_v2.3.1
I0204 01:01:51.030674   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/dashboard_v2.3.1 | docker load"
I0204 01:01:51.030883   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:51.073993   15671 cache_images.go:281] Loading image from: /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3
I0204 01:01:51.074012   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/pause_3.5: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/pause_3.5: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/pause_3.5': No such file or directory
I0204 01:01:51.074041   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5 --> /var/lib/minikube/images/pause_3.5 (252416 bytes)
I0204 01:01:51.074149   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:51.074386   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-scheduler_v1.22.3
I0204 01:01:51.074617   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:01:51.213555   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:51.250152   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:51.257996   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:01:55.985408   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/dashboard_v2.3.1 | docker load": (4.954715916s)
I0204 01:01:55.985439   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/docker.io/kubernetesui/dashboard_v2.3.1 from cache
I0204 01:01:55.985470   15671 ssh_runner.go:192] Completed: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-controller-manager_v1.22.3: (4.981412625s)
I0204 01:01:55.985493   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/kube-controller-manager_v1.22.3: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-controller-manager_v1.22.3: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/kube-controller-manager_v1.22.3': No such file or directory
I0204 01:01:55.985522   15671 ssh_runner.go:192] Completed: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-scheduler_v1.22.3: (4.9111275s)
I0204 01:01:55.985546   15671 ssh_runner.go:309] existence check for /var/lib/minikube/images/kube-scheduler_v1.22.3: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/images/kube-scheduler_v1.22.3: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/images/kube-scheduler_v1.22.3': No such file or directory
I0204 01:01:55.985557   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3 --> /var/lib/minikube/images/kube-controller-manager_v1.22.3 (27019776 bytes)
I0204 01:01:55.985567   15671 docker.go:206] Loading image: /var/lib/minikube/images/pause_3.5
I0204 01:01:55.985577   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/pause_3.5 | docker load"
I0204 01:01:55.985582   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3 --> /var/lib/minikube/images/kube-scheduler_v1.22.3 (13499904 bytes)
I0204 01:01:56.246325   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/pause_3.5 from cache
I0204 01:01:56.246404   15671 docker.go:206] Loading image: /var/lib/minikube/images/storage-provisioner_v5
I0204 01:01:56.246419   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/storage-provisioner_v5 | docker load"
I0204 01:01:57.046501   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/gcr.io/k8s-minikube/storage-provisioner_v5 from cache
I0204 01:01:57.046582   15671 docker.go:206] Loading image: /var/lib/minikube/images/coredns_v1.8.4
I0204 01:01:57.046608   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/coredns_v1.8.4 | docker load"
I0204 01:01:58.314748   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/coredns_v1.8.4 | docker load": (1.268117958s)
I0204 01:01:58.314771   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/coredns/coredns_v1.8.4 from cache
I0204 01:01:58.314813   15671 docker.go:206] Loading image: /var/lib/minikube/images/kube-apiserver_v1.22.3
I0204 01:01:58.314834   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-apiserver_v1.22.3 | docker load"
I0204 01:02:00.378006   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-apiserver_v1.22.3 | docker load": (2.063149333s)
I0204 01:02:00.378028   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-apiserver_v1.22.3 from cache
I0204 01:02:00.378075   15671 docker.go:206] Loading image: /var/lib/minikube/images/kube-proxy_v1.22.3
I0204 01:02:00.378092   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-proxy_v1.22.3 | docker load"
I0204 01:02:01.436250   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-proxy_v1.22.3 | docker load": (1.058138459s)
I0204 01:02:01.436269   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-proxy_v1.22.3 from cache
I0204 01:02:01.436298   15671 docker.go:206] Loading image: /var/lib/minikube/images/kube-scheduler_v1.22.3
I0204 01:02:01.436313   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-scheduler_v1.22.3 | docker load"
I0204 01:02:01.915055   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-scheduler_v1.22.3 from cache
I0204 01:02:01.915092   15671 docker.go:206] Loading image: /var/lib/minikube/images/kube-controller-manager_v1.22.3
I0204 01:02:01.915122   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/kube-controller-manager_v1.22.3 | docker load"
I0204 01:02:02.886006   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/kube-controller-manager_v1.22.3 from cache
I0204 01:02:02.886034   15671 docker.go:206] Loading image: /var/lib/minikube/images/etcd_3.5.0-0
I0204 01:02:02.886048   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo cat /var/lib/minikube/images/etcd_3.5.0-0 | docker load"
I0204 01:02:06.971707   15671 ssh_runner.go:192] Completed: /bin/bash -c "sudo cat /var/lib/minikube/images/etcd_3.5.0-0 | docker load": (4.085526084s)
I0204 01:02:06.971774   15671 cache_images.go:310] Transferred and loaded /Users/bi009260/.minikube/cache/images/k8s.gcr.io/etcd_3.5.0-0 from cache
I0204 01:02:06.974657   15671 cache_images.go:118] Successfully loaded all cached images
I0204 01:02:06.976559   15671 cache_images.go:87] LoadImages completed in 20.39303225s
I0204 01:02:06.991494   15671 ssh_runner.go:152] Run: docker info --format {{.CgroupDriver}}
I0204 01:02:07.521112   15671 cni.go:93] Creating CNI manager for ""
I0204 01:02:07.521381   15671 cni.go:167] CNI unnecessary in this configuration, recommending no CNI
I0204 01:02:07.523236   15671 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0204 01:02:07.523752   15671 kubeadm.go:153] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.22.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/dockershim.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NoTaintMaster:true NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[]}
I0204 01:02:07.526975   15671 kubeadm.go:157] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.22.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0204 01:02:07.528177   15671 kubeadm.go:909] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.22.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime=docker --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.22.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0204 01:02:07.529348   15671 ssh_runner.go:152] Run: sudo ls /var/lib/minikube/binaries/v1.22.3
I0204 01:02:07.539327   15671 binaries.go:47] Didn't find k8s binaries: sudo ls /var/lib/minikube/binaries/v1.22.3: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/binaries/v1.22.3': No such file or directory

Initiating transfer...
I0204 01:02:07.539739   15671 ssh_runner.go:152] Run: sudo mkdir -p /var/lib/minikube/binaries/v1.22.3
I0204 01:02:07.550477   15671 binary.go:67] Not caching binary, using https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubectl?checksum=file:https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubectl.sha256
I0204 01:02:07.550552   15671 binary.go:67] Not caching binary, using https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubeadm?checksum=file:https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubeadm.sha256
I0204 01:02:07.550544   15671 binary.go:67] Not caching binary, using https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubelet?checksum=file:https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/arm64/kubelet.sha256
I0204 01:02:07.550663   15671 ssh_runner.go:152] Run: sudo systemctl is-active --quiet service kubelet
I0204 01:02:07.550946   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubeadm
I0204 01:02:07.550946   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubectl
I0204 01:02:07.560874   15671 ssh_runner.go:309] existence check for /var/lib/minikube/binaries/v1.22.3/kubeadm: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubeadm: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/binaries/v1.22.3/kubeadm': No such file or directory
I0204 01:02:07.560908   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/linux/v1.22.3/kubeadm --> /var/lib/minikube/binaries/v1.22.3/kubeadm (42467328 bytes)
I0204 01:02:07.560983   15671 ssh_runner.go:309] existence check for /var/lib/minikube/binaries/v1.22.3/kubectl: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubectl: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/binaries/v1.22.3/kubectl': No such file or directory
I0204 01:02:07.561006   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/linux/v1.22.3/kubectl --> /var/lib/minikube/binaries/v1.22.3/kubectl (43450368 bytes)
I0204 01:02:07.561346   15671 ssh_runner.go:152] Run: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubelet
I0204 01:02:07.564949   15671 ssh_runner.go:309] existence check for /var/lib/minikube/binaries/v1.22.3/kubelet: stat -c "%!s(MISSING) %!y(MISSING)" /var/lib/minikube/binaries/v1.22.3/kubelet: Process exited with status 1
stdout:

stderr:
stat: cannot stat '/var/lib/minikube/binaries/v1.22.3/kubelet': No such file or directory
I0204 01:02:07.564983   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/cache/linux/v1.22.3/kubelet --> /var/lib/minikube/binaries/v1.22.3/kubelet (112474152 bytes)
I0204 01:02:12.766517   15671 ssh_runner.go:152] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0204 01:02:12.773840   15671 ssh_runner.go:319] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (334 bytes)
I0204 01:02:12.784958   15671 ssh_runner.go:319] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0204 01:02:12.796508   15671 ssh_runner.go:319] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2051 bytes)
I0204 01:02:12.808727   15671 ssh_runner.go:152] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0204 01:02:12.812904   15671 ssh_runner.go:152] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0204 01:02:12.822142   15671 certs.go:54] Setting up /Users/bi009260/.minikube/profiles/minikube for IP: 192.168.49.2
I0204 01:02:12.825572   15671 certs.go:182] skipping minikubeCA CA generation: /Users/bi009260/.minikube/ca.key
I0204 01:02:12.826395   15671 certs.go:182] skipping proxyClientCA CA generation: /Users/bi009260/.minikube/proxy-client-ca.key
I0204 01:02:12.827051   15671 certs.go:302] generating minikube-user signed cert: /Users/bi009260/.minikube/profiles/minikube/client.key
I0204 01:02:12.827418   15671 crypto.go:68] Generating cert /Users/bi009260/.minikube/profiles/minikube/client.crt with IP's: []
I0204 01:02:12.917122   15671 crypto.go:156] Writing cert to /Users/bi009260/.minikube/profiles/minikube/client.crt ...
I0204 01:02:12.917130   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/client.crt: {Name:mk76cd1a0bc30da0884b45f83be7500fa37e9e50 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:12.917641   15671 crypto.go:164] Writing key to /Users/bi009260/.minikube/profiles/minikube/client.key ...
I0204 01:02:12.917645   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/client.key: {Name:mk53142b419a70e2f795e4316dda75e8514ffa90 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:12.917942   15671 certs.go:302] generating minikube signed cert: /Users/bi009260/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0204 01:02:12.917955   15671 crypto.go:68] Generating cert /Users/bi009260/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0204 01:02:13.047512   15671 crypto.go:156] Writing cert to /Users/bi009260/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 ...
I0204 01:02:13.047520   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2: {Name:mk586644e0b394e91e881b91d227136552ccb2ce Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:13.048265   15671 crypto.go:164] Writing key to /Users/bi009260/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 ...
I0204 01:02:13.048268   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/apiserver.key.dd3b5fb2: {Name:mke75f23ad6f5e7329af6d292f1a929b5f9dd354 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:13.048515   15671 certs.go:320] copying /Users/bi009260/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 -> /Users/bi009260/.minikube/profiles/minikube/apiserver.crt
I0204 01:02:13.049895   15671 certs.go:324] copying /Users/bi009260/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 -> /Users/bi009260/.minikube/profiles/minikube/apiserver.key
I0204 01:02:13.051206   15671 certs.go:302] generating aggregator signed cert: /Users/bi009260/.minikube/profiles/minikube/proxy-client.key
I0204 01:02:13.051219   15671 crypto.go:68] Generating cert /Users/bi009260/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0204 01:02:13.126654   15671 crypto.go:156] Writing cert to /Users/bi009260/.minikube/profiles/minikube/proxy-client.crt ...
I0204 01:02:13.126662   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/proxy-client.crt: {Name:mke5aaae421dcf9e91d3e4cf59c22dcf4a9c01f8 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:13.127235   15671 crypto.go:164] Writing key to /Users/bi009260/.minikube/profiles/minikube/proxy-client.key ...
I0204 01:02:13.127238   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.minikube/profiles/minikube/proxy-client.key: {Name:mk0ebb97bce580c5326252a387de862fb15e62e8 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:13.129521   15671 certs.go:388] found cert: /Users/bi009260/.minikube/certs/Users/bi009260/.minikube/certs/ca-key.pem (1679 bytes)
I0204 01:02:13.129900   15671 certs.go:388] found cert: /Users/bi009260/.minikube/certs/Users/bi009260/.minikube/certs/ca.pem (1082 bytes)
I0204 01:02:13.130392   15671 certs.go:388] found cert: /Users/bi009260/.minikube/certs/Users/bi009260/.minikube/certs/cert.pem (1127 bytes)
I0204 01:02:13.130744   15671 certs.go:388] found cert: /Users/bi009260/.minikube/certs/Users/bi009260/.minikube/certs/key.pem (1679 bytes)
I0204 01:02:13.137158   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0204 01:02:13.151623   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0204 01:02:13.167883   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0204 01:02:13.184717   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0204 01:02:13.200710   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0204 01:02:13.215778   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0204 01:02:13.229752   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0204 01:02:13.242909   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0204 01:02:13.256411   15671 ssh_runner.go:319] scp /Users/bi009260/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0204 01:02:13.270278   15671 ssh_runner.go:319] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0204 01:02:13.282588   15671 ssh_runner.go:152] Run: openssl version
I0204 01:02:13.290522   15671 ssh_runner.go:152] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0204 01:02:13.298084   15671 ssh_runner.go:152] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0204 01:02:13.301704   15671 certs.go:431] hashing: -rw-r--r-- 1 root root 1111 Jan  4 21:36 /usr/share/ca-certificates/minikubeCA.pem
I0204 01:02:13.301749   15671 ssh_runner.go:152] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0204 01:02:13.306387   15671 ssh_runner.go:152] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0204 01:02:13.312858   15671 kubeadm.go:390] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.28@sha256:4780f1897569d2bf77aafb3d133a08d42b4fe61127f06fcfc90c2c5d902d893c Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.22.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.22.3 ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host}
I0204 01:02:13.312960   15671 ssh_runner.go:152] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0204 01:02:13.342567   15671 ssh_runner.go:152] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0204 01:02:13.349861   15671 ssh_runner.go:152] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0204 01:02:13.357241   15671 kubeadm.go:220] ignoring SystemVerification for kubeadm because of docker driver
I0204 01:02:13.357786   15671 ssh_runner.go:152] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0204 01:02:13.365204   15671 kubeadm.go:151] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0204 01:02:13.366087   15671 ssh_runner.go:243] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.22.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0204 01:02:13.833601   15671 out.go:203]     ▪ Generating certificates and keys ...
I0204 01:02:15.340482   15671 out.go:203]     ▪ Booting up control plane ...
I0204 01:02:29.421617   15671 out.go:203]     ▪ Configuring RBAC rules ...
I0204 01:02:29.797769   15671 cni.go:93] Creating CNI manager for ""
I0204 01:02:29.797786   15671 cni.go:167] CNI unnecessary in this configuration, recommending no CNI
I0204 01:02:29.798280   15671 ssh_runner.go:152] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0204 01:02:29.798499   15671 ssh_runner.go:152] Run: sudo /var/lib/minikube/binaries/v1.22.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0204 01:02:29.798577   15671 ssh_runner.go:152] Run: sudo /var/lib/minikube/binaries/v1.22.3/kubectl label nodes minikube.k8s.io/version=v1.24.0 minikube.k8s.io/commit=76b94fb3c4e8ac5062daf70d60cf03ddcc0a741b minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2022_02_04T01_02_29_0700 --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0204 01:02:30.110810   15671 ops.go:34] apiserver oom_adj: -16
I0204 01:02:30.111113   15671 kubeadm.go:985] duration metric: took 313.034125ms to wait for elevateKubeSystemPrivileges.
I0204 01:02:30.111379   15671 kubeadm.go:392] StartCluster complete in 16.798522584s
I0204 01:02:30.111588   15671 settings.go:142] acquiring lock: {Name:mk97c32305df5e6162628c73d00ead0380121b13 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:30.112012   15671 settings.go:150] Updating kubeconfig:  /Users/bi009260/.kube/config
I0204 01:02:30.115835   15671 lock.go:35] WriteFile acquiring /Users/bi009260/.kube/config: {Name:mk59e9a97516337b515eb2c6036691ebe966f3a6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0204 01:02:30.689944   15671 kapi.go:244] deployment "coredns" in namespace "kube-system" and context "minikube" rescaled to 1
I0204 01:02:30.690861   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.22.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0204 01:02:30.691651   15671 start.go:229] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.22.3 ControlPlane:true Worker:true}
I0204 01:02:30.691890   15671 config.go:176] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.22.3
I0204 01:02:30.692189   15671 addons.go:415] enableAddons start: toEnable=map[], additional=[]
I0204 01:02:30.694358   15671 addons.go:65] Setting storage-provisioner=true in profile "minikube"
I0204 01:02:30.694348   15671 addons.go:65] Setting default-storageclass=true in profile "minikube"
I0204 01:02:30.694476   15671 addons.go:153] Setting addon storage-provisioner=true in "minikube"
W0204 01:02:30.694497   15671 addons.go:165] addon storage-provisioner should already be in state true
I0204 01:02:30.694514   15671 out.go:176] 🔎  Verifying Kubernetes components...
I0204 01:02:30.694515   15671 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0204 01:02:30.694887   15671 ssh_runner.go:152] Run: sudo systemctl is-active --quiet service kubelet
I0204 01:02:30.694987   15671 host.go:66] Checking if "minikube" exists ...
I0204 01:02:30.713502   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:02:30.713515   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:02:30.751152   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0204 01:02:30.753945   15671 ssh_runner.go:152] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.22.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' | sudo /var/lib/minikube/binaries/v1.22.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0204 01:02:30.947043   15671 start.go:739] {"host.minikube.internal": 192.168.65.2} host record injected into CoreDNS
I0204 01:02:31.098223   15671 out.go:176]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0204 01:02:31.098353   15671 addons.go:348] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0204 01:02:31.098358   15671 ssh_runner.go:319] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0204 01:02:31.098434   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:02:31.127043   15671 api_server.go:51] waiting for apiserver process to appear ...
I0204 01:02:31.127219   15671 ssh_runner.go:152] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0204 01:02:31.134503   15671 addons.go:153] Setting addon default-storageclass=true in "minikube"
W0204 01:02:31.134518   15671 addons.go:165] addon default-storageclass should already be in state true
I0204 01:02:31.134544   15671 host.go:66] Checking if "minikube" exists ...
I0204 01:02:31.135682   15671 cli_runner.go:115] Run: docker container inspect minikube --format={{.State.Status}}
I0204 01:02:31.150482   15671 api_server.go:71] duration metric: took 458.791916ms to wait for apiserver process to appear ...
I0204 01:02:31.150515   15671 api_server.go:87] waiting for apiserver healthz status ...
I0204 01:02:31.150783   15671 api_server.go:240] Checking apiserver healthz at https://127.0.0.1:58503/healthz ...
I0204 01:02:31.162436   15671 api_server.go:266] https://127.0.0.1:58503/healthz returned 200:
ok
I0204 01:02:31.165610   15671 api_server.go:140] control plane version: v1.22.3
I0204 01:02:31.165619   15671 api_server.go:130] duration metric: took 14.846958ms to wait for apiserver health ...
I0204 01:02:31.166002   15671 system_pods.go:43] waiting for kube-system pods to appear ...
I0204 01:02:31.176602   15671 system_pods.go:59] 1 kube-system pods found
I0204 01:02:31.176613   15671 system_pods.go:61] "kube-controller-manager-minikube" [fc8ef515-3cbc-4651-972a-bff0bc4bc4d2] Pending
I0204 01:02:31.176622   15671 retry.go:31] will retry after 305.063636ms: only 1 pod(s) have shown up
I0204 01:02:31.256946   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:02:31.282983   15671 addons.go:348] installing /etc/kubernetes/addons/storageclass.yaml
I0204 01:02:31.282991   15671 ssh_runner.go:319] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0204 01:02:31.283053   15671 cli_runner.go:115] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0204 01:02:31.361734   15671 ssh_runner.go:152] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.22.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0204 01:02:31.420592   15671 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:58504 SSHKeyPath:/Users/bi009260/.minikube/machines/minikube/id_rsa Username:docker}
I0204 01:02:31.486289   15671 system_pods.go:59] 1 kube-system pods found
I0204 01:02:31.486300   15671 system_pods.go:61] "kube-controller-manager-minikube" [fc8ef515-3cbc-4651-972a-bff0bc4bc4d2] Pending
I0204 01:02:31.486330   15671 retry.go:31] will retry after 338.212508ms: only 1 pod(s) have shown up
I0204 01:02:31.516288   15671 ssh_runner.go:152] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.22.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0204 01:02:31.700200   15671 out.go:176] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0204 01:02:31.700228   15671 addons.go:417] enableAddons completed in 1.008252s
I0204 01:02:31.833672   15671 system_pods.go:59] 2 kube-system pods found
I0204 01:02:31.833687   15671 system_pods.go:61] "kube-controller-manager-minikube" [fc8ef515-3cbc-4651-972a-bff0bc4bc4d2] Pending
I0204 01:02:31.833705   15671 system_pods.go:61] "storage-provisioner" [0c5880a8-3dff-4995-a183-1dd6b8153414] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.)
I0204 01:02:31.833710   15671 system_pods.go:74] duration metric: took 667.704875ms to wait for pod list to return data ...
I0204 01:02:31.833719   15671 kubeadm.go:547] duration metric: took 1.142041291s to wait for : map[apiserver:true system_pods:true] ...
I0204 01:02:31.833753   15671 node_conditions.go:102] verifying NodePressure condition ...
I0204 01:02:31.838303   15671 node_conditions.go:122] node storage ephemeral capacity is 61255492Ki
I0204 01:02:31.838340   15671 node_conditions.go:123] node cpu capacity is 4
I0204 01:02:31.838353   15671 node_conditions.go:105] duration metric: took 4.594834ms to run NodePressure ...
I0204 01:02:31.838384   15671 start.go:234] waiting for startup goroutines ...
I0204 01:02:31.953110   15671 start.go:473] kubectl: 1.23.1, cluster: 1.22.3 (minor skew: 1)
I0204 01:02:31.970920   15671 out.go:176] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* 
* ==> container status <==
* 
* ==> coredns [0cfc0e861304] <==
* 
* ==> describe nodes <==
* 
* ==> dmesg <==
* 
* ==> etcd [0ed373bebf2a] <==
